#can be run from the python interpreter in ArcPro.
from arcgis.gis import GIS

# Authenticate
gis = GIS("https://www.arcgis.com", "username", "password")

# Get the Feature Service item
fs_item = gis.content.get("replace_with_itemID")  # Replace with Hosted Feature Service ID
fs_layer = fs_item.layers[0]  

# New symbology definition
update_params = {
    "drawingInfo": {
        "renderer": {
            "type": "simple",
            "symbol": {
                "type": "esriPMS",
                  "url": "471E7E31",
                  "imageData": "",
                  "contentType": "image/png",
                  "width": 19.5,
                  "height": 19.5,
                  "angle": 0,
                  "xoffset": 0,
                  "yoffset": 0
            },
            "visualVariables": [
                {
                    "type": "sizeInfo",
                    "valueExpressionTitle": "Custom",
                    "valueExpression": "$view.scale",
                    "stops": [
                        {"size": 35.78, "value": 18055.95},
                        {"size": 28.62, "value": 144447.63},
                        {"size": 14.31, "value": 1155581.10},
                        {"size": 7.15, "value": 9244648.86}
                    ],
                    "axis": "height",
                    "valueUnit": "unknown"
                }
            ]
        },
        "scaleSymbols": True,  # Boolean (not a string)
        "transparency": 0,
        "labelingInfo": [
            {
                "labelExpressionInfo": {
                    "expression": """
                        var mintime = Round(DateDiff(now(), $feature.time, 'minutes'), 0) + ' minutes ago';
                        var hourtime = Round(DateDiff(now(), $feature.time, 'hours'), 0) + ' hours ago';
                        $feature["callsign"] + TextFormatting.NewLine + 
                        IIf(DateDiff(now(), $feature.time, 'minutes') < 120, mintime, hourtime);
                    """,
                    "title": "New expression"
                },
                "labelPlacement": "esriServerPointLabelPlacementAboveCenter",
                "deconflictionStrategy": "static",
                "stackLabel": True,
                "stackAlignment": "textSymbol",
                "removeDuplicates": "none",
                "stackRowLength": 24,
                "useCodedValues": True,
                "maxScale": 0,
                "minScale": 2720922.72,
                "name": "Label Class 1",
                "priority": 0,
                "symbol": {
                    "type": "esriTS",
                    "color": [38, 38, 38, 255],
                    "haloColor": [217, 217, 217, 255],
                    "haloSize": 1.5,
                    "font": {
                        "family": "Arial",
                        "size": 10,
                        "style": "normal",
                        "weight": "normal",
                        "decoration": "none"
                    }
                }
            }
        ]
    }
}

# Update the feature service definition
response = fs_layer.manager.update_definition(update_params)

# Print response
print(response)
